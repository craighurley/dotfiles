#
# general
#
alias ..="cd .."
alias ack='ack --no-group --color-match=on_red'
alias c="clear"
alias dircolors='gdircolors'
alias e="exit"
alias g="git"
alias grep='command grep -I'
if [[ $(echo $SHELL | grep zsh) ]] ; then
    alias history="history -i"
    alias h="history -i"
elif [[ $(echo $SHELL | grep bash) ]] ; then
    alias h="history"
fi
alias hex="hexyl"
alias idle="python -m idlelib.idle"
alias j="jobs"
alias l="gls -lhF --color"
alias lo="gls -lhF --group-directories-first --color"
alias ll="gls -lhFA --color"
alias llo="gls -lhFA --group-directories-first --color"
alias ls="command gls -h --group-directories-first --color"
alias lsof='command lsof -n -P'
alias o='ollama'
alias plistbuddy="/usr/libexec/PlistBuddy"
alias pstree='command pstree -g 3'
alias tcpdump="command tcpdump -nn"
alias v="vim"
alias vi="vim"

alias micvolreset="osascript -e 'set volume input volume 66'"

#
# custom
#
alias dns="scutil --dns"
alias dnsflush="dscacheutil -flushcache && killall -HUP mDNSResponder"
# Clean up LaunchServices to remove duplicates in the "Open With" menu
alias lscleanup="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder"
alias me="curl ifconfig.co"
# mkpasswd clone using python. ensure passlib is installed (pip install passlib)
alias mkpasswd="python -c 'from passlib.hash import sha512_crypt; import getpass; print sha512_crypt.encrypt(getpass.getpass())'"
alias unquarantine="xattr -r -d com.apple.quarantine"
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'
alias weather="curl wttr.in"

#
# docker
#
alias d='docker'
alias docker-prune='docker system prune --volumes -f'
alias docker-rm-all='docker rm $(docker ps -a -q)'
alias docker-rmi-untagged='docker image prune -f'
alias docker-stop-all='docker stop $(docker ps -a -q)'
# docker containers
#alias aws='docker run --rm -it -v $HOME/.aws:/root/.aws -v $PWD:/aws -e AWS_PROFILE amazon/aws-cli:$DOCKER_AWS_CLI_VERSION'
#alias cfn-lint='docker run --rm -v $PWD:/workdir:ro craighurley/cfn-lint'
alias actdiag='docker run --rm -it -v $PWD:/workdir craighurley/diagrams actdiag -f /usr/share/fonts/ttf-dejavu/DejaVuSansMono.ttf --no-transparency'
alias aws-mfa='docker run --rm -it -v $HOME/.aws:/root/.aws -e AWS_PROFILE craighurley/aws-mfa'
alias blockdiag='docker run --rm -it -v $PWD:/workdir craighurley/diagrams blockdiag -f /usr/share/fonts/ttf-dejavu/DejaVuSansMono.ttf --no-transparency'
#alias cfn-flip='docker run --rm -v $PWD:/workdir craighurley/cfn-flip'
alias diagrams='docker run --rm -it -v $PWD:/workdir craighurley/diagrams diagrams'
alias ipcalc='docker run --rm -it craighurley/ipcalc'
alias mmdc='docker run --rm -it -v $PWD:/workdir minlag/mermaid-cli'
alias nc='docker run --rm -it craighurley/netcat -vz -w5'
alias nmap='docker run --rm -it craighurley/nmap -n -Pn'
alias node='docker run --rm -it -v $PWD:/workdir craighurley/node'
alias npm='docker run --rm -it -v $PWD:/workdir --entrypoint=npm craighurley/node'
alias org-formation='docker run --rm -it -v $HOME/.aws:/root/.aws:ro -v $PWD:/workdir -w /workdir -e AWS_PROFILE craighurley/org-formation-cli:$DOCKER_ORG_FORMATION_CLI_VERSION'
alias rsyslog-start='docker run --rm -d -v $PWD/log:/var/log -p 514:514 -p 514:514/udp --name rsyslog craighurley/rsyslog'
alias rsyslog-stop='docker stop rsyslog'
alias sceptre='docker run --rm -it -v $HOME/.aws:/root/.aws:ro -v $PWD:/workdir:ro -e AWS_PROFILE craighurley/sceptre:$DOCKER_SCEPTRE_VERSION'
alias seqdiag='docker run --rm -it -v $PWD:/workdir craighurley/diagrams seqdiag -f /usr/share/fonts/ttf-dejavu/DejaVuSansMono.ttf --no-transparency'
alias ssm='docker run --rm -it -v $HOME/.aws:/root/.aws -e AWS_PROFILE=$AWS_PROFILE -e AWS_REGION=$AWS_REGION docker.pkg.github.com/disneystreaming/ssm-helpers/ssm'
alias weechat='docker run --rm -it -v $HOME/.weechat:/home/user/.weechat craighurley/docker-weechat'
