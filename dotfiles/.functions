# Cleanup
function dsclean() {
    read -r -p "Delete all .DS_Stores in this directory and all subdirectories? (y/n) " -n 1
    echo
    if [[ $REPLY =~ ^[Yy]$ ]] ; then
        find . -type f -name '.DS_Store' -ls -delete
    fi
}

# Decode base64
function decode() {
    echo "$1" | base64 --decode ; echo
}

# Generate a random set of words for use in a password
function mkpassphrase() {
    p=$(gshuf -n${1-3} /usr/share/dict/words | tr '\n' ' ' | tr '[:upper:]' '[:lower:]' | sed 's/[[:space:]]$//')
    echo $p
}

function mkpassphrases() {
    for i in {1..10} ; do
        p=$(gshuf -n${1-3} /usr/share/dict/words | tr '\n' ' ' | tr '[:upper:]' '[:lower:]' | sed 's/[[:space:]]$//')
        echo $p
    done
}

function colours() {
    for i in {0..255} ; do
        printf "\x1b[38;5;${i}mcolour${i}\n"
    done
}

# rename tabs, useful for iterm2 and tmux
function rt {
    echo -ne "\033]0;"$@"\007"
}

# display all files in the user dir open by a given app
function lsof-ls() {
    if [[ ! -z "$1" ]] ; then
        p=$(lsof -t -c "$1")
        if [[ ! -z "$p" ]] ; then
            lsof -p "$p"
        else
            echo Could not find a process id for "$1"
        fi
    fi
}

function backup() {
    echo Backup documents
    tar -zcf ~/backups/$HOSTNAME-documents-$(date +%Y%m%d-%s).tgz --exclude "/Users/$USER/Documents/migrated" /Users/$USER/Documents

    echo Backup projects
    tar -zcf ~/backups/$HOSTNAME-projects-$(date +%Y%m%d-%s).tgz --exclude "/Users/$USER/Projects/migrated" /Users/$USER/Projects
}
